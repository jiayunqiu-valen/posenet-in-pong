

let video;
let poseNet;
let poses = [];

function setup() {
  createCanvas(640, 480);
  img = loadImage('download.jpeg');
  
  video = createCapture(VIDEO);
  video.size(width, height);
  

  poseNet = ml5.poseNet(video, modelReady);
  poseNet.on('pose', function(results) {
    poses = results;
  });
  video.hide();
  
  pongSetup();
}

function modelReady() {
  select('#status').html('Model Loaded');
}

function draw() {
  image(video, 0, 0, width, height);
  
  if (poses.length > 0) {
    print(poses[0].pose.rightWrist.y);
  }
   if (poses.length > 0) {
    print(poses[0].pose.leftWrist.y);
  }


 
  drawKeypoints();
  drawSkeleton();
  
  pongDraw();
}


function drawKeypoints()Â  {
  for (let i = 0; i < poses.length; i++) {
    let pose = poses[i].pose;
    for (let j = 0; j < pose.keypoints.length; j++) {
      let keypoint = pose.keypoints[j];
      if (keypoint.score > 0.2) {
        fill(255, 0, 0);
        noStroke();
        ellipse(keypoint.position.x, keypoint.position.y, 10, 10);
      }
    }
  }
}


function drawSkeleton() {
  for (let i = 0; i < poses.length; i++) {
    let skeleton = poses[i].skeleton;
    for (let j = 0; j < skeleton.length; j++) {
      let partA = skeleton[j][0];
      let partB = skeleton[j][1];
      stroke(255, 0, 0);
      line(partA.position.x, partA.position.y, partB.position.x, partB.position.y);
    }
  }
}

/// PONG CODE HERE ///

var x, y; // location of the ball
var vx, vy; // speed of the ball

var leftPaddle, rightPaddle;

var PADDLE_WIDTH = 10;
var PADDLE_HEIGHT = 50;
var PADDLE_OFFSET = 30;

var BALL_DIAMETER = 30;

var rightscore=0
var leftscore=0 


function gameOver(side) {
  x = width/2;
  y = height/2;
  if (side == "left") {
    vx = random(1, 3);
  } else {
    vx = random(-3, -1);
  }
  vy = random(-1, 1);
}

function pongSetup() {  
  x = width/2;
  y = height/2;
  
  vx = 1.5;
  vy = 1;
  
  rightPaddle = height/2;
  leftPaddle = height/2;
}

function pongDraw() {
  background(255);
  
  stroke(150);
  line (width/2, 0, width/2, height);
  
  fill(0);
  noStroke();
  rectMode(CENTER);
  
   text("LeftScore: " + leftscore, 20, 20);
   text("RightScore: " + rightscore, 380, 20)
  if (poses.length > 0) {
    leftPaddle = poses[0].pose.rightWrist.y;
    rightPaddle = poses[0].pose.leftWrist.y;
  }
  
  rect(PADDLE_OFFSET, leftPaddle, PADDLE_WIDTH, PADDLE_HEIGHT);
  rect(width-PADDLE_OFFSET, rightPaddle, PADDLE_WIDTH, PADDLE_HEIGHT);
  
  stroke(0);
   image(img,x,y,img.width / 4, img.height / 4);

  
  x += vx;
  y += vy;
  
  if (y < 15) {
    vy = -vy;
  }
  if (y > height-15) {
    vy = -vy;
  }
  
  if (x < PADDLE_OFFSET + PADDLE_WIDTH/2 + BALL_DIAMETER/2) {
    if (y < leftPaddle - PADDLE_HEIGHT/2 ||
        y > leftPaddle + PADDLE_HEIGHT/2) {
      gameOver("left");
      rightscore++;
    } else {
      vx = -vx*1.2;
    }
  }
  if (x > width - (PADDLE_OFFSET + PADDLE_WIDTH/2 + BALL_DIAMETER/2)) {
    if (y < rightPaddle - PADDLE_HEIGHT/2 ||
        y > rightPaddle + PADDLE_HEIGHT/2) {
      gameOver("right");
      leftscore++;
    } else {
      vx = -vx*1.2;
    }
  }  
}
